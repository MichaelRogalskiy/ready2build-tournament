'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';

const BOSSES = [
  '–ú–∏—Ö–∞–π–ª–æ –†–æ–≥–∞–ª—å—Å—å–∫–∏–π',
  '–û–ª–µ–≥ –ì–æ—Ä–æ—Ö–æ–≤—Å—å–∫–∏–π',
  '–û–ª–µ–∫—Å–∞–Ω–¥—Ä –î—É–±—ñ–ª–µ—Ç',
  '–í–∞–¥—ñ–º –ö–æ–≤–∞–ª—å–æ–≤'
];

export default function Home() {
  const [selectedBoss, setSelectedBoss] = useState('');
  const [tournament, setTournament] = useState<{ id: string; title: string } | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const router = useRouter();

  useEffect(() => {
    loadLatestTournament();
  }, []);

  const loadLatestTournament = async () => {
    try {
      const response = await fetch('/api/tournaments/latest');
      if (response.ok) {
        const data = await response.json();
        setTournament(data);
      } else {
        setError('–¢—É—Ä–Ω—ñ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π —Ç—É—Ä–Ω—ñ—Ä —á–µ—Ä–µ–∑ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å.');
      }
    } catch (error) {
      console.error('Error loading tournament:', error);
      setError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç—É—Ä–Ω—ñ—Ä—É.');
    } finally {
      setLoading(false);
    }
  };

  const handleStart = () => {
    if (selectedBoss && tournament) {
      localStorage.setItem('selectedBoss', selectedBoss);
      localStorage.setItem('tournamentId', tournament.id);
      router.push('/play');
    }
  };

  return (
    <div className="container">
      <div className="card">
        <h1 className="title">üèÜ Tournament Ranking System</h1>
        <p className="subtitle">Swiss-—Ç—É—Ä–Ω—ñ—Ä –¥–ª—è –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤</p>
        
        {loading && (
          <div style={{ textAlign: 'center', marginBottom: '2rem' }}>
            <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç—É—Ä–Ω—ñ—Ä—É...</p>
          </div>
        )}
        
        {error && (
          <div style={{ 
            background: '#ffebee', 
            color: '#c62828', 
            padding: '1rem', 
            borderRadius: '8px', 
            marginBottom: '2rem' 
          }}>
            {error}
          </div>
        )}
        
        {tournament && (
          <div style={{ 
            background: '#e8f5e9', 
            color: '#2e7d32', 
            padding: '1rem', 
            borderRadius: '8px', 
            marginBottom: '2rem' 
          }}>
            <h3 style={{ marginBottom: '0.5rem' }}>üìã –ü–æ—Ç–æ—á–Ω–∏–π —Ç—É—Ä–Ω—ñ—Ä:</h3>
            <p><strong>{tournament.title}</strong></p>
            <small>ID: {tournament.id}</small>
          </div>
        )}
        
        <div style={{ marginBottom: '2rem' }}>
          <label htmlFor="boss" style={{ display: 'block', marginBottom: '0.5rem', fontWeight: 600 }}>
            –Ø ‚Äî –±–æ—Å:
          </label>
          <select
            id="boss"
            className="select"
            value={selectedBoss}
            onChange={(e) => setSelectedBoss(e.target.value)}
          >
            <option value="">–û–±–µ—Ä—ñ—Ç—å —Å–µ–±–µ</option>
            {BOSSES.map((boss) => (
              <option key={boss} value={boss}>
                {boss}
              </option>
            ))}
          </select>
        </div>
        
        <div style={{ background: '#f5f5f5', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
          <h3 style={{ marginBottom: '1rem' }}>üìñ –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î:</h3>
          <ul style={{ listStyle: 'none', padding: 0 }}>
            <li style={{ marginBottom: '0.5rem' }}>‚úÖ 3 —Ä–∞—É–Ω–¥–∏ –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è</li>
            <li style={{ marginBottom: '0.5rem' }}>‚úÖ –ù–∞ –∫–æ–∂–Ω–æ–º—É –µ–∫—Ä–∞–Ω—ñ ‚Äî 5 –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤</li>
            <li style={{ marginBottom: '0.5rem' }}>‚úÖ –û–±–∏—Ä–∞—î—Ç–µ Top-1, Top-2 —Ç–∞ Bottom-1</li>
            <li style={{ marginBottom: '0.5rem' }}>‚úÖ Swiss-—Å–∏—Å—Ç–µ–º–∞: —Å–∏–ª—å–Ω—ñ –∑ —Å–∏–ª—å–Ω–∏–º–∏</li>
            <li>‚úÖ –ü—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è ‚Äî –∑–≤–µ–¥–µ–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥</li>
          </ul>
        </div>
        
        <button
          className="button"
          onClick={handleStart}
          disabled={!selectedBoss || !tournament || loading}
          style={{ width: '100%' }}
        >
          {loading ? '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...' : '–ü–æ—á–∞—Ç–∏ –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è'}
        </button>
      </div>
      
      <div className="card" style={{ marginTop: '2rem' }}>
        <h2 style={{ marginBottom: '1rem' }}>üöÄ –ê–¥–º—ñ–Ω: –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —Ç—É—Ä–Ω—ñ—Ä</h2>
        <Link href="/admin" className="button secondary" style={{ display: 'inline-block', textDecoration: 'none' }}>
          –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ
        </Link>
      </div>
    </div>
  );
}