'use client';

import { useState } from 'react';
import Link from 'next/link';

export default function AdminPage() {
  const [title, setTitle] = useState('');
  const [csvFile, setCsvFile] = useState<File | null>(null);
  const [rounds, setRounds] = useState(3);
  const [groupSize, setGroupSize] = useState(5);
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState<{ tournamentId: string; managersCount: number; bossesCount: number; message: string } | null>(null);
  const [error, setError] = useState('');

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      setCsvFile(file);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!title || !csvFile) {
      setError('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è');
      return;
    }
    
    setLoading(true);
    setError('');
    setResult(null);
    
    try {
      const formData = new FormData();
      formData.append('title', title);
      formData.append('csv', csvFile);
      formData.append('rounds', rounds.toString());
      formData.append('groupSize', groupSize.toString());
      
      const response = await fetch('/api/seed', {
        method: 'POST',
        body: formData
      });
      
      const data = await response.json();
      
      if (response.ok) {
        setResult(data);
        setTitle('');
        setCsvFile(null);
      } else {
        setError(data.error || '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—É—Ä–Ω—ñ—Ä—É');
      }
    } catch (error) {
      console.error('Error:', error);
      setError('–ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container">
      <div className="card">
        <h1 className="title">üîß –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å</h1>
        <p className="subtitle">–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ç—É—Ä–Ω—ñ—Ä—É</p>
        
        <form onSubmit={handleSubmit}>
          <div style={{ marginBottom: '1.5rem' }}>
            <label htmlFor="title" style={{ display: 'block', marginBottom: '0.5rem', fontWeight: 600 }}>
              –ù–∞–∑–≤–∞ —Ç—É—Ä–Ω—ñ—Ä—É:
            </label>
            <input
              id="title"
              type="text"
              className="select"
              placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ú–æ–Ω–æ–±–∞–Ω–∫ ‚Äî –û—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤, –æ—Å—ñ–Ω—å 2025"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              required
            />
          </div>
          
          <div style={{ marginBottom: '1.5rem' }}>
            <label htmlFor="csv" style={{ display: 'block', marginBottom: '0.5rem', fontWeight: 600 }}>
              CSV —Ñ–∞–π–ª –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏:
            </label>
            <input
              id="csv"
              type="file"
              accept=".csv"
              onChange={handleFileChange}
              required
              style={{ display: 'block', width: '100%' }}
            />
            <small style={{ color: '#666' }}>
              –û—á—ñ–∫—É–≤–∞–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏: –ò–ù–ù, –§–ò–û, –Ü–ü–ù –ª–∏–¥–∞, –õ–∏–¥ –¥–ª—è –¥–∂–∏—Ä–∞, –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
            </small>
          </div>
          
          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem', marginBottom: '1.5rem' }}>
            <div>
              <label htmlFor="rounds" style={{ display: 'block', marginBottom: '0.5rem', fontWeight: 600 }}>
                –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–∞—É–Ω–¥—ñ–≤:
              </label>
              <input
                id="rounds"
                type="number"
                className="select"
                min="1"
                max="10"
                value={rounds}
                onChange={(e) => setRounds(Number(e.target.value))}
              />
            </div>
            
            <div>
              <label htmlFor="groupSize" style={{ display: 'block', marginBottom: '0.5rem', fontWeight: 600 }}>
                –†–æ–∑–º—ñ—Ä –≥—Ä—É–ø–∏:
              </label>
              <input
                id="groupSize"
                type="number"
                className="select"
                min="3"
                max="10"
                value={groupSize}
                onChange={(e) => setGroupSize(Number(e.target.value))}
              />
            </div>
          </div>
          
          {error && (
            <div style={{ 
              background: '#ffebee', 
              color: '#c62828', 
              padding: '1rem', 
              borderRadius: '8px', 
              marginBottom: '1rem' 
            }}>
              {error}
            </div>
          )}
          
          {result && (
            <div style={{ 
              background: '#e8f5e9', 
              color: '#2e7d32', 
              padding: '1rem', 
              borderRadius: '8px', 
              marginBottom: '1rem' 
            }}>
              <h3>‚úÖ –¢—É—Ä–Ω—ñ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!</h3>
              <p><strong>ID —Ç—É—Ä–Ω—ñ—Ä—É:</strong> {result.tournamentId}</p>
              <p><strong>–ú–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤:</strong> {result.managersCount}</p>
              <p><strong>–ë–æ—Å—ñ–≤:</strong> {result.bossesCount}</p>
              <hr style={{ margin: '1rem 0', border: 'none', borderTop: '1px solid #66bb6a' }} />
              <p style={{ fontSize: '0.9rem' }}>
                –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Ü–∏–º ID –∑ –±–æ—Å–∞–º–∏ –¥–ª—è –ø–æ—á–∞—Ç–∫—É –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è
              </p>
            </div>
          )}
          
          <button
            type="submit"
            className="button"
            disabled={loading}
            style={{ width: '100%' }}
          >
            {loading ? '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—É—Ä–Ω—ñ—Ä—É...' : '–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—É—Ä–Ω—ñ—Ä'}
          </button>
        </form>
        
        <div style={{ marginTop: '2rem', padding: '1rem', background: '#f5f5f5', borderRadius: '8px' }}>
          <h3 style={{ marginBottom: '1rem' }}>üìã –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è:</h3>
          <ol style={{ paddingLeft: '1.5rem' }}>
            <li style={{ marginBottom: '0.5rem' }}>–ü—ñ–¥–≥–æ—Ç—É–π—Ç–µ CSV —Ñ–∞–π–ª –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏</li>
            <li style={{ marginBottom: '0.5rem' }}>–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç—É—Ä–Ω—ñ—Ä—É</li>
            <li style={{ marginBottom: '0.5rem' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª —Ç–∞ —Å—Ç–≤–æ—Ä—ñ—Ç—å —Ç—É—Ä–Ω—ñ—Ä</li>
            <li style={{ marginBottom: '0.5rem' }}>–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è ID —Ç—É—Ä–Ω—ñ—Ä—É –∑ –±–æ—Å–∞–º–∏</li>
            <li>–ë–æ—Å–∏ –∑–º–æ–∂—É—Ç—å –ø–æ—á–∞—Ç–∏ –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ</li>
          </ol>
        </div>
      </div>
      
      <div style={{ textAlign: 'center', marginTop: '2rem' }}>
        <Link href="/" className="button secondary" style={{ display: 'inline-block', textDecoration: 'none' }}>
          –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
        </Link>
      </div>
    </div>
  );
}